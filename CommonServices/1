//
//  CLogger.cpp
//  ThreadProgramming
//
//  Created by Vivek Yadav on 11/11/19.
//  Copyright Â© 2019 Vivek Yadav. All rights reserved.
//

#include <iostream>
#include <ctime>
#include "CLogger.h"
#include "CLogLevel.h"

#define GET_LOG_STRING(pDateTime, pLogLevel, pLogMessage)  {	\
	std::cout << pDateTime << " " << pLogLevel << " " << pLogMessage << std::endl	\
}

CLogger::CLogger()
{
    this->mDefaultLogLevel  =   INFO;
}

CLogger::~CLogger()
{
    
}

std::string CLogger::getCurrentDateTime()
{
    time_t rawtime;
    struct tm * timeinfo;
    char buffer[128];

    time (&rawtime);
    timeinfo = localtime(&rawtime);

    strftime(buffer,sizeof(buffer),"%Y-%d-%m %H:%M:%S",timeinfo);
    std::string str(buffer);
    return buffer;
}

std::ostream& CLogger::operator<<(const char *pLogMessageStream)
{
    std::ostream &lOStream = GET_LOG_STRING(this->getCurrentDateTime(), mLogLevel.getLovelthis->mDefaultLogLevel]
		    , pLogMessageStream);
    return lOStream;
}

CLogger& CLogger::operator()(LOG_LEVEL pLogLevel)
{
    this->mDefaultLogLevel = pLogLevel;
    return *this;
}
